/** @fileoverview <pre> Multimedia widget para TelaSocial/Janelas Virtuais
	Desenhado em tempo real usando SVG.
	Baseado no antigo widget do Flickr by Taboca.
	</pre>
	@version 1.0
	@author Matheus Martins Teixeira <a href="mailto:mteixeira@grad.icmc.usp.br">&lt;mteixeira@grad.icmc.usp.br&gt;</a>
 */ 
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is TelaSocial
 *
 * The Initial Developer of the Original Code is Taboca TelaSocial.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *      Marcio Galli   <mgalli@taboca.com>
 *      Rafael Sartori <faelsartori@gmail.com>
 *      Matheus Teixeira <teixeira.mdk@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

function Album(obj) {
	this.name = obj.name;
	this.fbId = obj.id;
	this.description = obj.description;
	this.photos = new Array();
	var self = this;
	this.storePhotos = function(e) {
		for(var i = 0; i < e.length; i++) {
			var ph = new Photo(e[i]);
			self.photos.push(ph);
			multimedia.cc++;
		}
	};
	this.loadPhotos = function() {
		$.getJSON("https://graph.facebook.com/" + this.fbId + "/photos?access_token=" + API_KEY_FACEBOOK + "&format=json", function(e) {
			self.storePhotos(e.data);
		}).error(function(e){console.log(e+" ERROR!")});
	}
	var self = this;
	if(obj.updatedTime != null) {
		var date = (obj.updated_time.split('T')[0]).split('-');
		var time = ((obj.updated_time.split('T')[1]).split('+')[0]).split(':');
	} else {
		var date = (obj.created_time.split('T')[0]).split('-');
		var time = ((obj.created_time.split('T')[1]).split('+')[0]).split(':');
	}
	this.updated_time = new Date(date[0], date[1] - 1, date[2], time[0], time[1], time[2], 0);
	this.updated_time = new Date((this.updated_time.getTime() - (this.updated_time.getTimezoneOffset() * 60 * 1000)));
	this.likes = 0;
	if(obj.likes != null)
		this.likes = obj.likes.data.length;
}

function Photo(obj) {
	this.image = obj.images[0].source;
	this.w = obj.images[0].width;
	this.h = obj.images[0].height;
	this.id = obj.id;

	if(obj.message != null)
		this.message = obj.message;
	else
		this.message = null;

	var self = this;
	if(obj.updatedTime != null) {
		var date = (obj.updated_time.split('T')[0]).split('-');
		var time = ((obj.updated_time.split('T')[1]).split('+')[0]).split(':');
	} else {
		var date = (obj.created_time.split('T')[0]).split('-');
		var time = ((obj.created_time.split('T')[1]).split('+')[0]).split(':');
	}
	this.updated_time = new Date(date[0], date[1] - 1, date[2], time[0], time[1], time[2], 0);
	this.updated_time = new Date((this.updated_time.getTime() - (this.updated_time.getTimezoneOffset() * 60 * 1000)));
	this.likes = 0;
	if(obj.likes != null)
		this.likes = obj.likes.data.length;
}

/**
	Objeto com as ações do widget
	@class
	@name multimedia
 */
var multimedia = {
	URL : ICMC_FB_ALBUMS,
	albums : null,
	container : null,
	queueDiv : null,
	slideShowDiv : null,
	swapTime : 5000,
	init : function(obj) {
		multimedia.container = $("<div>").addClass('mainWrapper').appendTo($(obj));
		multimedia.container.html('<div class="slideshow"><div class="name"></div></div><div class="slideshow"><div class="name"></div></div>');
		multimedia.slideShowDiv = multimedia.container.find('.slideshow');
		multimedia.queueDiv = $('<div>').addClass('queue').appendTo(multimedia.container);
		multimedia.albums = new Array();
		$('<input>').attr('type', 'hidden').attr('id', 'hascontent').attr('id', 'hascontent').appendTo("#container");
	},
	start : function() {
		multimedia.__loadAlbums();
	},
	__loadAlbums : function() {
		$.getJSON(multimedia.URL, function(e) {
			multimedia.__storeAlbums(e.data);
		})
	},
	__storeAlbums : function(e) {
		var i = 0;
		for( i = 0; i < e.length; i++) {
			var album = new Album(e[i]);
			album.loadPhotos();
			this.albums.push(album);
		}
		if(e.length > 0)
			$('#hascontent').attr('value', '1');
		else
			$('#hascontent').attr('value', '0');
		setTimeout(function() {
			multimedia.render();
		}, 1000);
	},
	cc : 0,
	render : function() {
		var album = Math.floor(Math.random() * multimedia.albums.length);
		var present = multimedia.albums[album];

		if(present.photos.length != 0 && multimedia.cc > 0) {
			var wrapper = $('<div>').addClass('imageWrap').appendTo(multimedia.queueDiv);
			var photo = present.photos.pop();
			if(photo.message == null)
				$('<div>').append($('<img>').attr('likes', photo.likes).attr("src", photo.image).attr('alt', present.name)).appendTo(wrapper);
			else
				$('<div>').append($('<img>').attr('likes', photo.likes).attr("src", photo.image).attr('alt', photo.message)).appendTo(wrapper);
			multimedia.cc--;
		}
		if(multimedia.cc > 0)
			setTimeout(function() {
				multimedia.render();
			}, 100);
		if(multimedia.cc == 0)
			multimedia.slideshowStart();

	},
	slideshowStart : function() {
		setTimeout(function() {
			multimedia.swapPhotos()
		}, 100);
	},
	swapPhotos : function() {
		$(multimedia.queueDiv.children()).animate({
			'opacity' : '0.5'
		}, multimedia.swapTime / 5);

		$($(multimedia.queueDiv.children()[0])).animate({
			"opacity" : "0",
			"margin-top" : "-330px"
		}, multimedia.swapTime / 5, function() {
			var next1 = $(multimedia.queueDiv.children()[3]).animate({
				'opacity' : '1'
			}, multimedia.swapTime / 5);
			$($($(multimedia.slideShowDiv[0]).find('.name')[0])).animate({
				"margin-top" : "585"
			}, multimedia.swapTime / 5, function() {
				$(this).html(next1.find('img').attr('alt'));
				if(next1.find('img').attr('likes') > 0)
					$(this).append($('<span>').html('<img src=\'./like-50.png\'/><b>' + next1.find('img').attr('likes')+'</b>'));
				$(this).animate({
					"margin-top" : "515"
				}, multimedia.swapTime / 5);
			});
			$(multimedia.slideShowDiv[0]).css('background-image', 'url(' + next1.find('img').attr('src') + ')');
			var next2 = $(multimedia.queueDiv.children()[6]).animate({
				'opacity' : '1'
			}, multimedia.swapTime / 5);

			$($($(multimedia.slideShowDiv[1]).find('.name')[0])).animate({
				"margin-top" : "585"
			}, multimedia.swapTime / 5, function() {
				$(this).html(next2.find('img').attr('alt'));
				if(next2.find('img').attr('likes') > 0)
					$(this).append($('<span>').html('<img src=\'./like-50.png\'/><b>' + next2.find('img').attr('likes')+'</b>'));
				$(multimedia.slideShowDiv[1]).css('background-image', 'url(' + next2.find('img').attr('src') + ')');
				$(this).animate({
					"margin-top" : "515"
				}, multimedia.swapTime / 5);
			});

			$($(multimedia.queueDiv.children()[1])).remove().appendTo(multimedia.queueDiv).css('margin-top', "10px").css("opacity", "0.5");
			$(this).remove().appendTo(multimedia.queueDiv).css('margin-top', "10px").css("opacity", "0.5");

			setTimeout(function() {
				multimedia.swapPhotos();
			}, multimedia.swapTime);
		});
	}
}

/* call all elements */
$(document).ready(function() {
	multimedia.init('#container');
	multimedia.start();
});
